{"ast":null,"code":"import { ADD_ITEM_TO_CART_ERROR, ADD_ITEM_TO_CART_LOADING, ADD_ITEM_TO_CART_SUCCESS, GET_CART_ITEMS_ERROR, GET_CART_ITEMS_LOADING, GET_CART_ITEMS_SUCCESS } from \"./cart.types\"; // Note: Do not update/change the initial state\n\nconst cartInitalState = {\n  getCartItems: {\n    loading: false,\n    error: false\n  },\n  addCartItem: {\n    loading: false,\n    error: false\n  },\n  updateCartItem: {\n    loading: false,\n    error: false\n  },\n  removeCartItem: {\n    loading: false,\n    error: false\n  },\n  data: []\n};\nexport const cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cartInitalState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    /////////////////GET//////////////////     \n    case GET_CART_ITEMS_LOADING:\n      {\n        return { ...state,\n          getCartItems: {\n            loading: true,\n            error: false\n          }\n        };\n      }\n\n    case GET_CART_ITEMS_SUCCESS:\n      {\n        return { ...state,\n          getCartItems: {\n            loading: false,\n            error: false\n          },\n          data: payload\n        };\n      }\n\n    case GET_CART_ITEMS_ERROR:\n      {\n        return { ...state,\n          getCartItems: {\n            loading: false,\n            error: true\n          }\n        };\n      }\n    /////////////////ADD//////////////////    \n\n    case ADD_ITEM_TO_CART_LOADING:\n      {\n        return { ...state,\n          addCartItem: {\n            loading: true,\n            error: false\n          }\n        };\n      }\n\n    case ADD_ITEM_TO_CART_SUCCESS:\n      {\n        return { ...state,\n          addCartItem: {\n            loading: false,\n            error: false\n          },\n          data: [...state.data, payload]\n        };\n      }\n\n    case ADD_ITEM_TO_CART_ERROR:\n      {\n        return { ...state,\n          addCartItem: {\n            loading: false,\n            error: true\n          }\n        };\n      }\n    /////////////////REMOVE//////////////////    \n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"names":["ADD_ITEM_TO_CART_ERROR","ADD_ITEM_TO_CART_LOADING","ADD_ITEM_TO_CART_SUCCESS","GET_CART_ITEMS_ERROR","GET_CART_ITEMS_LOADING","GET_CART_ITEMS_SUCCESS","cartInitalState","getCartItems","loading","error","addCartItem","updateCartItem","removeCartItem","data","cartReducer","state","type","payload"],"sources":["F:/vishal/Practice-Repo/RCT-201/c2/rct-201.c3-main/src/redux/cart/cart.reducer.js"],"sourcesContent":["import { ADD_ITEM_TO_CART_ERROR, ADD_ITEM_TO_CART_LOADING, ADD_ITEM_TO_CART_SUCCESS, GET_CART_ITEMS_ERROR, GET_CART_ITEMS_LOADING, GET_CART_ITEMS_SUCCESS } from \"./cart.types\";\n\n// Note: Do not update/change the initial state\nconst cartInitalState = {\n  getCartItems: {\n    loading: false,\n    error: false,\n  },\n  addCartItem: {\n    loading: false,\n    error: false,\n  },\n  updateCartItem: {\n    loading: false,\n    error: false,\n  },\n  removeCartItem: {\n    loading: false,\n    error: false,\n  },\n  data: [],\n};\nexport const cartReducer = (state = cartInitalState, {type, payload}) => {\n   \n  switch(type){\n\n/////////////////GET//////////////////     \n\n   case GET_CART_ITEMS_LOADING : {\n     return{\n       ...state, \n       getCartItems: { loading: true, error: false }\n     }\n   }\n\n   case GET_CART_ITEMS_SUCCESS : {\n     return{\n       ...state, \n       getCartItems: { loading: false, error: false },\n       data : payload\n     }\n   }\n\n   case GET_CART_ITEMS_ERROR : {\n     return{\n       ...state, \n       getCartItems: { loading: false, error: true },\n     }\n   }\n\n\n/////////////////ADD//////////////////    \n  \n   case ADD_ITEM_TO_CART_LOADING : {\n     return{\n       ...state, \n       addCartItem: { loading: true, error: false }\n     }\n   }          \n\n   case ADD_ITEM_TO_CART_SUCCESS : {\n     return{\n       ...state, \n       addCartItem: { loading: false, error: false },\n       data : [...state.data, payload]\n     }\n   }\n\n   case ADD_ITEM_TO_CART_ERROR : {\n     return{\n       ...state, \n       addCartItem: { loading: false, error: true },\n     }\n   }\n/////////////////REMOVE//////////////////    \n\n\n    default : {\n     return state \n    }\n  }\n  \n};\n"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,wBAAjC,EAA2DC,wBAA3D,EAAqFC,oBAArF,EAA2GC,sBAA3G,EAAmIC,sBAAnI,QAAiK,cAAjK,C,CAEA;;AACA,MAAMC,eAAe,GAAG;EACtBC,YAAY,EAAE;IACZC,OAAO,EAAE,KADG;IAEZC,KAAK,EAAE;EAFK,CADQ;EAKtBC,WAAW,EAAE;IACXF,OAAO,EAAE,KADE;IAEXC,KAAK,EAAE;EAFI,CALS;EAStBE,cAAc,EAAE;IACdH,OAAO,EAAE,KADK;IAEdC,KAAK,EAAE;EAFO,CATM;EAatBG,cAAc,EAAE;IACdJ,OAAO,EAAE,KADK;IAEdC,KAAK,EAAE;EAFO,CAbM;EAiBtBI,IAAI,EAAE;AAjBgB,CAAxB;AAmBA,OAAO,MAAMC,WAAW,GAAG,YAA8C;EAAA,IAA7CC,KAA6C,uEAArCT,eAAqC;EAAA,IAApB;IAACU,IAAD;IAAOC;EAAP,CAAoB;;EAEvE,QAAOD,IAAP;IAEF;IAEG,KAAKZ,sBAAL;MAA8B;QAC5B,OAAM,EACJ,GAAGW,KADC;UAEJR,YAAY,EAAE;YAAEC,OAAO,EAAE,IAAX;YAAiBC,KAAK,EAAE;UAAxB;QAFV,CAAN;MAID;;IAED,KAAKJ,sBAAL;MAA8B;QAC5B,OAAM,EACJ,GAAGU,KADC;UAEJR,YAAY,EAAE;YAAEC,OAAO,EAAE,KAAX;YAAkBC,KAAK,EAAE;UAAzB,CAFV;UAGJI,IAAI,EAAGI;QAHH,CAAN;MAKD;;IAED,KAAKd,oBAAL;MAA4B;QAC1B,OAAM,EACJ,GAAGY,KADC;UAEJR,YAAY,EAAE;YAAEC,OAAO,EAAE,KAAX;YAAkBC,KAAK,EAAE;UAAzB;QAFV,CAAN;MAID;IAGJ;;IAEG,KAAKR,wBAAL;MAAgC;QAC9B,OAAM,EACJ,GAAGc,KADC;UAEJL,WAAW,EAAE;YAAEF,OAAO,EAAE,IAAX;YAAiBC,KAAK,EAAE;UAAxB;QAFT,CAAN;MAID;;IAED,KAAKP,wBAAL;MAAgC;QAC9B,OAAM,EACJ,GAAGa,KADC;UAEJL,WAAW,EAAE;YAAEF,OAAO,EAAE,KAAX;YAAkBC,KAAK,EAAE;UAAzB,CAFT;UAGJI,IAAI,EAAG,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBI,OAAhB;QAHH,CAAN;MAKD;;IAED,KAAKjB,sBAAL;MAA8B;QAC5B,OAAM,EACJ,GAAGe,KADC;UAEJL,WAAW,EAAE;YAAEF,OAAO,EAAE,KAAX;YAAkBC,KAAK,EAAE;UAAzB;QAFT,CAAN;MAID;IACJ;;IAGI;MAAU;QACT,OAAOM,KAAP;MACA;EAvDH;AA0DD,CA5DM"},"metadata":{},"sourceType":"module"}